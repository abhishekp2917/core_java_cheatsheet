*   What are inner classes ?

>>  A class declared inside another class is called inner classes. This concept
    introduced in java 1.1 version to fix GUI bugs related to event handling.

    For example :

    ```
    class Outer {

        class Inner {

        }
    }
    ```

    Here, Inner class is defined inside Outer class. 

    There is no existance of Inner class object without existance of Outer class 
    object.

    Moreover, relationship between Outer class object and Inner class object is 
    HAS-A relationship (Outer class HAS-A Inner class).

____________________________________________________________________________________

*   Where we should use inner classes ?

>>  If without existing one type of object if there is no chance of existing another 
    type of object, then we should go for inner classes.

    For example :

    As University consists of several departments and if there is no University, then
    there is no chance of existance of departments. Hence, we must declare department
    class (Inner class) inside University class (Outer class).

    ```
    class University {

        class Department {

        }
    }
    ``` 
____________________________________________________________________________________

*   How many types of Inner classes are there based of position of declaration and 
    behaviour ?

>>  There are four types of Inner classes based on position of declaration and 
    behaviour :

    (1) Normal or regular inner classes

    (2) Method local inner classes

    (3) Annonymous inner classes

    (4) Static nested classes   

____________________________________________________________________________________

